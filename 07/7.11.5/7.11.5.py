"""
Подвиг 5. Объявите функцию, которая принимает строку с кириллицей и латиницей и преобразовывает русские символы в
латиницу, используя следующий словарь для замены русских букв на соответствующее латинское написание:

t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}
Функция должна возвращать преобразованную строку. Замены делать без учета регистра (переданную строку перевести в
нижний регистр - малые буквы). Небуквенные символы " : ;.,_" превращать в символ '-' (дефиса).

Определите декоратор для этой функции, который несколько подряд идущих дефисов, превращает в один дефис. Полученная
строка должна возвращаться при вызове декоратора. (Сам декоратор на экран ничего выводить не должен).

Примените декоратор к первой функции и вызовите ее для строки s, прочитанной из входного потока командой:

s = input()
Результат работы декорированной функции отобразите на экране.

Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/7/7.11.5

Sample Input:

Python - это круто!
Sample Output:

python-eto-kruto!

"""

t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}


# здесь продолжайте программу
s = input()


def reduce_dashes(func):
    def wrapper(*args, **kwargs):
        sc: str
        sc = func(*args, **kwargs)
        while sc.count('--') > 0:
            sc = sc.replace('--', '-')

        return sc

    return wrapper


@reduce_dashes
def convert_urlencoded(st: str):
    st = st.lower()
    st = ''.join([t[_] if _ in t else _ for _ in st])
    for _ in " :;.,_":
        st = st.replace(_, "-")
    return st


print(convert_urlencoded(s))
