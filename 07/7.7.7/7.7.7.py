"""
Подвиг 7. Лягушка прыгает вперед и может скакнуть либо на одно деление, либо сразу на два. Наша задача определить
количество вариантов маршрутов, которыми лягушка может достичь риски под номером N (натуральное число N подается на
вход программе).



Решать задачу следует с применением рекурсивной функции. Назовем ее get_path. Алгоритм решения следующий. Рассмотрим,
например, риску под номером 4. Очевидно, в нее лягушка может скакнуть либо с риски номер 2, либо с риски номер 3.
Значит, общее число вариантов перемещений лягушки можно определить как:

get_path(4) = get_path(3) + get_path(2)
Аналогично будет справедливо и для любой риски N:

get_path(N) = get_path(N-1) + get_path(N-2)
А начальные условия задачи, следующие:

get_path(1) -> 1
get_path(2) -> 2
Реализуйте такую рекурсивную функцию, которая должна возвращать количество вариантов перемещений лягушки для риски под
номером N.

Вызовите эту функцию для введенного числа N и отобразите результат на экране.

Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/7/7.7.7

Sample Input:

7
Sample Output:

21

"""


def get_path(N):
    if N == 1:
        return 1
    elif N == 2:
        return 2

    return get_path(N - 1) + get_path(N - 2)


N = int(input())

print(get_path(N))

