"""
Подвиг 4. На вход программе подается натуральное число N (N >= 2), которое читается с помощью команды:

N = int(input())
Необходимо с помощью рекурсивной функции сигнатуры:

def fib_rec(N, f=[1, 1]): ...
(здесь N - общее количество чисел Фибоначчи; f - начальный список этих чисел) сформировать последовательность чисел
Фибоначчи по правилу: первые два числа равны 1 и 1, а каждое следующе значение равно сумме двух предыдущих. Пример
такой последовательности для первых 7 чисел: 1, 1, 2, 3, 5, 8, 13, ...

Функция должна возвращать список сформированной последовательности длиной N. Вызывать функцию не нужно, только объявить.

Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/7/7.7.4

Sample Input:

7
Sample Output:

1 1 2 3 5 8 13

"""

# ввод числа N
# N = int(input())
N = 7


# здесь задается функция fib_rec (переменную N не менять!)
# def fib_rec(N, f=[1, 1]):
#     if N > 1:
#         return [f[-2]] + fib_rec(N - 1, [f[-1]] + [f[-2] + f[-1]])
#     else:
#         return [f[-2]]

# def fib_rec(N, f=[1, 1]):
#     if N > 1:
#         f.append(f[-2] + f[-1])
#         fib_rec(N - 1, f)
#     else:
#         return f
#

def fib_rec(N, f=[1, 1]):
    if N > 2:
        f.append(f[-1] + f[-2])
        fib_rec(N - 1, f)
    return f


res = fib_rec(N)
print(fib_rec(N))




