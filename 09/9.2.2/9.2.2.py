"""
Подвиг 2. Мы с вами в заданиях несколько раз генерировали последовательность чисел Фибоначчи, которая строится по правилу: каждое последующее число равно сумме двух предыдущих. Для разнообразия давайте будем генерировать каждое последующее как сумму трех предыдущих чисел. При этом первые три числа равны 1. Получаем такую последовательность:

1, 1, 1, 3, 5, 9, 17, 31, 57, ...

Не знаю, есть ли у нее название, поэтому, в рамках уроков, я скромно назову ее последовательностью Балакирева. 

Итак, на вход программе поступает натуральное число N (N > 5), которое необходимо прочитать и сохранить в переменной. Затем (или в начале программы), объявить функцию-генератор с сигнатурой:

def balak_seq(max_len): ...

которая бы возвращала max_len = N первых чисел последовательности Балакирева (включая первые три единицы).

Реализуйте эту функцию без использования коллекций (списков, кортежей, словарей и т.п.). Вызовите ее N раз для получения N чисел и выведите полученные числа на экран в одну строчку через пробел.
"""


# N = 7
N = int(input())

def balak_seq(max_len):
    for x in range(max_len):
        if x < 3:
            last3 = last2 = last1 = 1
            balak_sum = 1
        else:
            balak_sum = last3 + last2 + last1
            last3 = last2
            last2 = last1
            last1 = balak_sum
        yield balak_sum


for i in balak_seq(N):
    print(i, end=' ')
